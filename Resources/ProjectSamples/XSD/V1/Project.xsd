<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Project" type="ProjectType"/>

  <!-- =========================================================================

    Common Elements:
      - All projects must have the Following:

  ============================================================================== -->


  <!-- Top Leve item: Here's where the overall project gets Defined -->
  <xs:complexType name="ProjectType">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="1" maxOccurs="1"/>
      <xs:element type="xs:string" name="ProjectType" minOccurs="1" maxOccurs="1"/>
      <xs:element type="MetaDataType" name="MetaData" minOccurs="1" maxOccurs="1"/>
      <xs:element type="DataSetContainerType" name="Inputs" minOccurs="1" maxOccurs="1"/>
      <xs:element type="RealizationsType" name="Realizations" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <!-- A Project can have realizations -->
  <xs:complexType name="RealizationType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="1" maxOccurs="1"/>
      <xs:element type="MetaDataType" name="MetaData" minOccurs="0" maxOccurs="1"/>
      <xs:element type="ParametersType" name="Parameters" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute type="xs:boolean" name="Promoted" use="optional"/>
    <xs:attribute type="xs:string" name="DateCreated" use="required"/>
    <xs:attribute type="xs:string" name="ProductVersion" use="required"/>
    <xs:attribute type="xs:string" name="Guid" use="required"/>
  </xs:complexType>

  <!--Realizations Must have an Analysis-->
  <xs:complexType name="AnalysisType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name"/>
      <xs:element type="DataSetContainerType" name="Outputs" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MetaType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="Name" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="MetaDataType">
    <xs:sequence>
      <xs:element type="MetaType" name="Meta" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="Name" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ParametersType">
    <xs:sequence>
      <xs:element type="ParamType" name="Param" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MetricType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="Name" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="MetricsType">
    <xs:sequence>
      <xs:element type="MetricType" name="Metric" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <!-- =========================================================================

    Datasets: Inputs, Outputs, files etc....

  ============================================================================== -->

  <!-- Let's define our Input/Output Containers and what they can contain -->
  <xs:complexType name="DataSetContainerType">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <!-- A scalar value is possible as an input or an output but use <Params> if you can -->
      <xs:element type="xs:string" name="Value"/>
      <xs:element type="RasterType" name="Raster"/>
      <xs:element type="VectorType" name="Vector"/>
      <xs:element type="TINType" name="TIN"/>
      <xs:element type="DEMType" name="DEM"/>
      <xs:element type="HillShadeType" name="HillShade"/>
    </xs:choice>
  </xs:complexType>

  <!-- The base type  -->
  <xs:complexType name="DataSetType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="0" maxOccurs="1"/>
      <!--Path is ALWAYS relative inside a project-->
      <xs:element type="xs:string" name="Path" minOccurs="0" maxOccurs="1"/>
      <xs:element type="xs:string" name="Project" minOccurs="0" maxOccurs="1"/>
      <xs:element type="MetaDataType" name="MetaData" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute type="xs:string" name="id"/>
    <xs:attribute type="xs:string" name="Guid"/>
    <xs:attribute type="xs:string" name="ref"/>
  </xs:complexType>

  <!-- Now some Subtypes -->
  <xs:complexType name="GeoSpatialType">
    <xs:complexContent>
      <xs:extension base="DataSetType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ContextLayerType" mixed="true">
    <xs:complexContent>
      <xs:extension base="DataSetType">
        <xs:sequence>
          <xs:element type="xs:string" name="URL" default="http://" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SimpleFileType">
    <xs:complexContent>
      <xs:extension base="DataSetType"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Here are the GeoSpatial Types-->
  <xs:complexType name="RasterType">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TINType">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VectorType">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- DEMs extend rasters -->
  <xs:complexType name="DEMType">
    <xs:complexContent>
      <xs:extension base="RasterType"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Here are our context layers -->
  <xs:complexType name="HillShadeType">
    <xs:complexContent>
      <xs:extension base="ContextLayerType"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Simple file types that we use often -->
  <xs:complexType name="CSVType">
    <xs:complexContent>
      <xs:extension base="SimpleFileType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ImageType">
    <xs:complexContent>
      <xs:extension base="SimpleFileType"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- =========================================================================

    Realizations: This is where things get custom for each type of thing.

  ============================================================================== -->

  <xs:complexType name="RealizationsType">
    <xs:choice>
      <xs:element type="DoDType" name="DoD" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="VBETType" name="VBET" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="NREIType" name="NREI" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="RiverStylesType" name="RiverStyles" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="ConfinementType" name="Confinement" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="GUTType" name="GUT" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="FHMType" name="FHM" maxOccurs="unbounded" minOccurs="0"/>
    </xs:choice>
  </xs:complexType>

  <!-- =========================================================================

    Project: VBET

  ============================================================================== -->

  <xs:complexType name="VBETType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">
        <xs:sequence>
          <xs:element type="VBETInputType" name="Inputs" minOccurs="0"/>
          <xs:element type="VBETAnalysisType" name="Analysis" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VBETInputType">
    <xs:sequence>
      <xs:element type="VBETInputTopographyType" name="Topography"/>
      <xs:element type="VBETInputDrainageType" name="DrainageNetworks"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VBETInputTopographyType">
    <xs:sequence>
      <xs:element type="DEMType" name="DEM" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="DEMType" name="Flow" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element type="DEMType" name="Slope" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VBETInputDrainageType">
    <xs:sequence>
      <xs:element type="VBETInputDrainageNetworkType" name="Network"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VBETInputDrainageNetworkType" mixed="true">
    <xs:complexContent>
      <xs:extension base="VectorType">
        <xs:sequence>
          <xs:element type="VBETBufferType" name="Buffers"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VBETBufferType">
    <xs:sequence>
      <xs:element type="VectorType" name="Buffer" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VBETAnalysisType">
    <xs:sequence>
      <xs:element type="xs:string" name="Name"/>
      <xs:element type="DataSetContainerType" name="Outputs"/>
    </xs:sequence>
  </xs:complexType>


  <!-- =========================================================================

    Project: NREI

  ============================================================================== -->

  <xs:complexType name="NREIType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">
        <xs:sequence>
          <xs:element type="DataSetContainerType" name="Inputs" minOccurs="0"/>
          <xs:element type="DataSetContainerType" name="Analysis" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- =========================================================================

    Project: Confinement

  ============================================================================== -->

  <xs:complexType name="ConfinementType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">
        <xs:sequence>
          <xs:element type="ConfinementInputType" name="Inputs" minOccurs="0"/>
          <xs:element type="ConfinementAnalysisType" name="Analysis" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ConfinementInputType">
    <xs:sequence>
      <xs:element type="ValleyBottomsType" name="ValleyBottoms"/>
      <xs:element type="ChannelPolygonsType" name="ChannelPolygons"/>
      <xs:element type="StreamNetworksType" name="StreamNetworks"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ValleyBottomsType">
    <xs:sequence>
      <xs:element type="VectorType" name="ValleyBottom" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ChannelPolygonsType">
    <xs:sequence>
      <xs:element type="VectorType" name="ChannelPolygon"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StreamNetworksType">
    <xs:sequence>
      <xs:element type="VectorType" name="StreamNetwork"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConfinementAnalysisType">
    <xs:sequence>
      <xs:element type="xs:string" name="Name"/>
      <xs:element type="ConfinementOutputsType" name="Outputs"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConfinementOutputsType">
    <xs:sequence>
      <xs:element type="VectorType" name="ConfiningMargins"/>
      <xs:element type="VectorType" name="RawConfiningState"/>
      <xs:element type="MovingWindowsType" name="MovingWindows"/>
      <xs:element type="FixedSegmentsType" name="FixedSegments"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MovingWindowsType">
    <xs:sequence>
      <xs:element type="ConfinementWindowType" name="Window"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConfinementWindowType">
    <xs:sequence>
      <xs:element type="xs:string" name="Name"/>
      <xs:element type="VectorType" name="SeedPointile"/>
      <xs:element type="VectorType" name="MovingWindow"/>
    </xs:sequence>
    <xs:attribute type="xs:string" name="id"/>
  </xs:complexType>

  <xs:complexType name="FixedSegmentsType">
    <xs:sequence>
      <xs:element type="ConfinementSegmentType" name="Segment"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConfinementSegmentType">
    <xs:sequence>
      <xs:element type="xs:string" name="Name"/>
      <xs:element type="VectorType" name="ConfinementSegments"/>
    </xs:sequence>
    <xs:attribute type="xs:string" name="id"/>
  </xs:complexType>

  <!-- =========================================================================

    Project: River Styles

  ============================================================================== -->

  <xs:complexType name="RiverStylesType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">
        <xs:sequence>
          <xs:element type="RiverStylesInputType" name="Inputs" minOccurs="0"/>
          <xs:element type="RiverStylesAnalysisType" name="Analysis" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RiverStylesInputType">
    <xs:sequence>
      <xs:element type="RiverStylesInputDrainageNetworksType" name="DrainageNetworks"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="RiverStylesInputDrainageNetworksType">
    <xs:sequence>
      <xs:element type="RiverStylesInputDrainageNetworkType" name="Network"/>
    </xs:sequence>
    <xs:attribute type="xs:string" name="Guid" use="optional"/>
  </xs:complexType>

  <xs:complexType name="RiverStylesInputDrainageNetworkType" mixed="true">
    <xs:complexContent>
      <xs:extension base="VectorType">
        <xs:sequence>
          <xs:element type="VBETBufferType" name="Buffers"/>
          <xs:element type="ValleyBottomType" name="ValleyBottom"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ValleyBottomType">
    <xs:complexContent>
      <xs:extension base="VectorType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RiverStylesConfinementType">
    <xs:sequence>
      <xs:element type="VectorType" name="Confinement"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="RiverStylesReachType">
    <xs:sequence>
      <xs:element type="ManualCrossChecksType" name="ManualCrossChecks"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ManualCrossChecksType">
    <xs:sequence>
      <xs:element type="VectorType" name="ManualCrossCheck"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="RiverStylesAnalysisType">
    <xs:sequence>
      <xs:element type="RiverStylesConfinementType" name="Confinements"/>
      <xs:element type="RiverStylesReachType" name="RiverStyleReach"/>
    </xs:sequence>
  </xs:complexType>

  <!-- =========================================================================

    Project: GUT

  ============================================================================== -->
  <xs:complexType name="GUTType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">    <xs:sequence>
      <xs:element type="DataSetContainerType" name="Inputs" minOccurs="0"/>
      <xs:element type="GUTAnalysisType" name="Analysis" minOccurs="0"/>
    </xs:sequence></xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GUTAnalysisType">
    <xs:sequence>
      <xs:element type="GUTOutputsContainerType" name="Outputs"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GUTOutputsContainerType">
    <xs:sequence>
      <xs:element type="GUTOutputsType" name="InChannel"/>
      <xs:element type="GUTOutputsType" name="OutChannel"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GUTOutputsType">
    <xs:sequence>
      <xs:element type="VectorType" name="Tier1"/>
      <xs:element type="VectorType" name="Tier2"/>
      <xs:element type="VectorType" name="Tier3"/>
    </xs:sequence>
  </xs:complexType>

  <!-- =========================================================================

    Project: GCD

  ============================================================================== -->

  <xs:complexType name="DoDType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">    <xs:sequence>
      <xs:element type="GCDInputType" name="Inputs" minOccurs="0"/>
      <xs:element type="GCDAnalysisType" name="Analysis" minOccurs="0"/>
    </xs:sequence></xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="GCDInputType">
    <xs:sequence>
      <xs:element type="VBETInputTopographyType" name="Topography"/>
      <xs:element type="VBETInputDrainageType" name="DrainageNetworks"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GCDAnalysisType">
    <xs:sequence>
      <xs:element type="xs:string" name="Name"/>
      <xs:element type="DataSetContainerType" name="Outputs"/>
    </xs:sequence>
  </xs:complexType>


  <!-- =========================================================================

    Project: FHM

  ============================================================================== -->

  <xs:complexType name="FHMType" mixed="true">
    <xs:complexContent>
      <xs:extension base="RealizationType">
        <xs:sequence>    <xs:sequence>
      <xs:element type="DataSetContainerType" name="Inputs" minOccurs="0"/>
      <xs:element type="FHMAnalysisType" name="Analysis" minOccurs="0"/>
    </xs:sequence></xs:sequence>

      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="FHMAnalysisType">
    <xs:sequence>
      <xs:element type="MetricsType" name="Metrics"/>
      <xs:element type="FHMOutputsType" name="Outputs"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FHMOutputsType">
    <xs:sequence>
      <xs:element type="ImageType" name="Image"/>
      <xs:element type="RasterType" name="Raster"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>